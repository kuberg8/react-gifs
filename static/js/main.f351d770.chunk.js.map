{"version":3,"sources":["components/Gif/preloader.svg","redux/gif-reducer.js","redux/redux-store.js","components/Gif/Gif.js","components/Gif/GifAPIComponent.js","components/Gif/GifContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","App.js","serviceWorker.js","index.js","components/Gif/gif.module.css"],"names":["module","exports","initialState","gifData","offsetCount","isFetching","searchText","toggleIsFetchingAC","type","gifReducer","state","action","newSearchText","reducers","combineReducers","gif","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Gif_item","props","useState","setIsFetching","className","style","gif_item","src","preloader","display","onLoad","visibility","Gif","gifElements","map","item","key","id","images","downsized_large","url","gifBlock","onScroll","event","target","scrollTop","offsetHeight","scrollHeight","moreGif","onScrollList","GifAPIComponent","axios","then","response","getGif","data","addOffsetCount","this","setFetching","React","Component","connect","dispatch","getGifActionCreator","addOffsetCountAC","Header","placeholder","onChange","e","inputValue","currentTarget","value","debounce","setGif","request","setSearchText","setGifActionCreator","changeSearchTextAC","App","HeaderContainer","GifContainer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f351d770.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.7361e6fb.svg\";","const GET_GIF = \"GET-GIF\";\r\nconst SET_GIF = \"SET-GIF\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst ADD_OFFSET_COUNT = \"ADD-OFFSET-COUNT\";\r\nconst CHANGE_SEARCH_TEXT = \"CHANGE-SEARCH-TEXT\";\r\n\r\nlet initialState = {\r\n  gifData: [],\r\n  offsetCount: 25,\r\n  isFetching: false,\r\n  searchText: \"\",\r\n};\r\n\r\nfunction gifReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_GIF:\r\n      return {\r\n        ...state,\r\n        gifData: [...state.gifData, ...action.gifData],\r\n      };\r\n    case SET_GIF:\r\n      return {\r\n        ...state,\r\n        gifData: [...action.gifData],\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case ADD_OFFSET_COUNT:\r\n      return {\r\n        ...state,\r\n        offsetCount: state.offsetCount + action.offsetCount,\r\n      };\r\n    case CHANGE_SEARCH_TEXT:\r\n      return {\r\n        ...state,\r\n        searchText: action.newSearchText,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getGifActionCreator = (gifData) => {\r\n  return {\r\n    type: GET_GIF,\r\n    gifData,\r\n  };\r\n};\r\n\r\nexport const setGifActionCreator = (gifData) => {\r\n  return {\r\n    type: SET_GIF,\r\n    gifData,\r\n  };\r\n};\r\n\r\nexport function toggleIsFetchingAC(isFetching) {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n}\r\n\r\nexport function addOffsetCountAC(offsetCount) {\r\n  return {\r\n    type: ADD_OFFSET_COUNT,\r\n    offsetCount,\r\n  };\r\n}\r\n\r\nexport function changeSearchTextAC(newSearchText) {\r\n  return {\r\n    type: CHANGE_SEARCH_TEXT,\r\n    newSearchText,\r\n  };\r\n}\r\n\r\nexport default gifReducer;\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport gifReducer from \"./gif-reducer.js\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n  gif: gifReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport style from \"./gif.module.css\";\r\nimport preloader from \"./preloader.svg\";\r\n\r\nfunction Gif_item(props) {\r\n  let [isFetching, setIsFetching] = useState(true);\r\n\r\n  return (\r\n    <div className={style.gif_item}>\r\n      <img\r\n        src={preloader}\r\n        style={isFetching ? { display: \"block\" } : { display: \"none\" }}\r\n      />\r\n      <img\r\n        onLoad={() => setIsFetching(false)}\r\n        src={props.gif}\r\n        style={\r\n          isFetching ? { visibility: \"hidden\" } : { visibility: \"visible\" }\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Gif(props) {\r\n  let gifElements = props.gifData.map((item) => {\r\n    return <Gif_item key={item.id} gif={item.images.downsized_large.url} />;\r\n  });\r\n\r\n  let onScrollList = (event) => {\r\n    const scrollBottom =\r\n      event.target.scrollTop + event.target.offsetHeight ==\r\n      event.target.scrollHeight;\r\n\r\n    if (scrollBottom) {\r\n      props.moreGif();\r\n    }\r\n  };\r\n\r\n  if (props.isFetching) {\r\n    return (\r\n      <div className={style.gifBlock}>\r\n        <img className={style.preloader} src={preloader} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={style.gifBlock} onScroll={(event) => onScrollList(event)}>\r\n      {gifElements}\r\n      {/* <button onClick={props.moreGif}>more</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gif;\r\n","import React from \"react\";\r\nimport Gif from \"./Gif.js\";\r\nimport * as axios from \"axios\";\r\n\r\nclass GifAPIComponent extends React.Component {\r\n  componentDidMount() {\r\n    this.props.setFetching(true);\r\n    axios\r\n      .get(\r\n        \"https://api.giphy.com/v1/gifs/trending?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&limit=25&rating=G\"\r\n      )\r\n      .then((response) => {\r\n        this.props.getGif(response.data.data);\r\n        this.props.setFetching(false);\r\n      });\r\n  }\r\n\r\n  moreGif = () => {\r\n    axios\r\n      .get(\r\n        this.props.searchText && this.props.searchText != \"\"\r\n          ? `https://api.giphy.com/v1/gifs/search?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&q=${this.props.searchText}&limit=25&offset=${this.props.offsetCount}&rating=G&lang=en`\r\n          : `https://api.giphy.com/v1/gifs/trending?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&limit=25&rating=G&offset=${this.props.offsetCount}`\r\n      )\r\n      .then((response) => {\r\n        this.props.getGif(response.data.data);\r\n      });\r\n    this.props.addOffsetCount(25);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Gif\r\n        gifData={this.props.gifData}\r\n        moreGif={this.moreGif}\r\n        isFetching={this.props.isFetching}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GifAPIComponent;\r\n","import { connect } from \"react-redux\";\r\nimport GifAPIComponent from \"./GifAPIComponent.js\";\r\nimport {\r\n  getGifActionCreator,\r\n  toggleIsFetchingAC,\r\n  addOffsetCountAC,\r\n} from \"../../redux/gif-reducer.js\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    gifData: state.gif.gifData,\r\n    offsetCount: state.gif.offsetCount,\r\n    isFetching: state.gif.isFetching,\r\n    searchText: state.gif.searchText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getGif: (gifData) => {\r\n      dispatch(getGifActionCreator(gifData));\r\n    },\r\n    setFetching: (isFetching) => {\r\n      dispatch(toggleIsFetchingAC(isFetching));\r\n    },\r\n    addOffsetCount: (offsetCount) => {\r\n      dispatch(addOffsetCountAC(offsetCount));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GifAPIComponent);\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport { debounce } from \"throttle-debounce\";\r\n\r\nfunction Header(props) {\r\n  let onSearchChange = (e) => {\r\n    let inputValue = e.currentTarget.value;\r\n    const request = debounce(300, () => {\r\n      props.setFetching(true);\r\n      if (inputValue === \"\") {\r\n        axios\r\n          .get(\r\n            \"https://api.giphy.com/v1/gifs/trending?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&limit=25&rating=G\"\r\n          )\r\n          .then((response) => {\r\n            props.setGif(response.data.data);\r\n            props.setFetching(false);\r\n          });\r\n      } else {\r\n        axios\r\n          .get(\r\n            `https://api.giphy.com/v1/gifs/search?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&q=${inputValue}&limit=25&offset=0&rating=G&lang=en`\r\n          )\r\n          .then((response) => {\r\n            props.setGif(response.data.data);\r\n            props.setFetching(false);\r\n          });\r\n      }\r\n    });\r\n\r\n    request();\r\n    props.setSearchText(inputValue);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"head\">\r\n        <div className=\"logo\">GIF</div>\r\n        <input\r\n          placeholder=\"Поиск..\"\r\n          onChange={onSearchChange}\r\n          value={props.searchText}\r\n        />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { connect } from \"react-redux\";\r\nimport Header from \"./Header.js\";\r\nimport {\r\n  setGifActionCreator,\r\n  changeSearchTextAC,\r\n  toggleIsFetchingAC,\r\n} from \"../../redux/gif-reducer.js\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    searchText: state.gif.searchText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setGif: (gifData) => {\r\n      dispatch(setGifActionCreator(gifData));\r\n    },\r\n    setSearchText: (newSearchText) => {\r\n      dispatch(changeSearchTextAC(newSearchText));\r\n    },\r\n    setFetching: (isFetching) => {\r\n      dispatch(toggleIsFetchingAC(isFetching));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport store from \"./redux/redux-store.js\";\r\nimport { Provider } from \"react-redux\";\r\nimport GifContainer from \"./components/Gif/GifContainer.js\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HeaderContainer />\r\n      <GifContainer />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gifBlock\":\"gif_gifBlock__DnKsi\",\"preloader\":\"gif_preloader__2exB6\",\"animatetop\":\"gif_animatetop__25QLH\",\"gif_item\":\"gif_gif_item__2iuEK\"};"],"sourceRoot":""}