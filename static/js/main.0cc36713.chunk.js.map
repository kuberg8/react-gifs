{"version":3,"sources":["components/Gif/gif.module.css","components/Gif/preloader.svg","redux/gif-reducer.js","redux/redux-store.js","components/Gif/Gif.js","components/Gif/GifAPIComponent.js","components/Gif/GifContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","gifData","offsetCount","isFetching","isRequest","gifReducer","state","action","type","reducers","combineReducers","gif","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Gif_item","props","className","style","gif_item","src","Gif","gifElements","map","f","key","id","images","downsized_large","url","gifBlocks","onClick","moreGig","GifAPIComponent","axios","then","response","getGif","data","addOffsetCount","moreSearchGif","this","React","Component","connect","dispatch","getGifActionCreator","toggleIsFetchingAC","addOffsetCountAC","Header","useState","search","setSearch","placeholder","onChange","e","currentTarget","value","setGif","toggleIsRequest","setGifActionCreator","toggleIsRequestAC","App","HeaderContainer","GifContainer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0cc36713.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gifBlocks\":\"gif_gifBlocks__1gDZf\",\"animatetop\":\"gif_animatetop__2q8TM\",\"gif_item\":\"gif_gif_item__1n2Es\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.997055d9.svg\";","const GET_GIF = \"GET-GIF\"\r\nconst SET_GIF = \"SET-GIF\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\"\r\nconst TOGGLE_IS_REQUEST = \"TOGGLE-IS-REQUEST\"\r\nconst ADD_OFFSET_COUNT = \"ADD-OFFSET-COUNT\"\r\n\r\n\r\nlet initialState = {\r\n\tgifData: [],\r\n\toffsetCount: 25,\r\n\tisFetching: false,\r\n\tisRequest: false,\r\n\r\n}\r\n\r\n\r\n\r\nfunction gifReducer(state = initialState, action) {\r\n\tif(action.type === GET_GIF) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tgifData: [ ...state.gifData, ...action.gifData  ],\t\t\t\r\n\t\t}\r\n\t} else if(action.type === SET_GIF) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tgifData: [ ...action.gifData  ],\t\t\t\r\n\t\t}\t\t\r\n\t} else if(action.type === TOGGLE_IS_FETCHING) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tisFetching: action.isFetching\r\n\t\t}\r\n\t} else if(action.type === TOGGLE_IS_REQUEST) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tisRequest: action.isRequest\r\n\t\t}\r\n\t} else if(action.type === ADD_OFFSET_COUNT) {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\toffsetCount: state.offsetCount + action.offsetCount\r\n\t\t}\r\n\t} \r\n\treturn state\r\n}\r\n\r\n\r\n\r\n\r\nexport const getGifActionCreator = (gifData) => {\r\n\treturn {\r\n\t\ttype: GET_GIF,\r\n\t\tgifData\r\n\t}\r\n}\r\n\r\n\r\nexport const setGifActionCreator = (gifData) => {\r\n\treturn {\r\n\t\ttype: SET_GIF,\r\n\t\tgifData\r\n\t}\r\n}\r\n\r\nexport function toggleIsFetchingAC(isFetching) {\r\n\treturn {\r\n\t\ttype: TOGGLE_IS_FETCHING,\r\n\t\tisFetching\r\n\t}\r\n}\r\n\r\nexport function toggleIsRequestAC(isRequest) {\r\n\treturn {\r\n\t\ttype: TOGGLE_IS_REQUEST,\r\n\t\tisRequest\r\n\t}\r\n}\r\n\r\n\r\nexport function addOffsetCountAC(offsetCount) {\r\n\treturn {\r\n\t\ttype: ADD_OFFSET_COUNT,\r\n\t\toffsetCount\r\n\t}\r\n}\r\n\r\n\r\nexport default gifReducer","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\n\r\nimport gifReducer from \"./gif-reducer.js\"\r\n\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\n\r\nlet reducers = combineReducers({\r\n\tgif: gifReducer,\r\n});\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));   - как было до использования хрумовского Redux DevTools\r\n//window.store = store;  - не нужен так как можно посмотреть данные State в Redux DevTools\r\n\r\nexport default store;","import React from 'react';\r\nimport style from './gif.module.css'\r\nimport preloader from './preloader.svg'\r\n\r\n\r\n\r\nfunction Gif_item(props) {\r\n\treturn (\r\n\t\t<div className={style.gif_item}>\r\n\t\t\t<img src={props.gif} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nfunction Gif(props) {\r\n\t\r\n\tlet gifElements = props.gifData.map( (f) => {\r\n\t\treturn (<Gif_item key={f.id} gif={f.images.downsized_large.url} />)\r\n\t});\r\n\r\n \r\n\treturn (\r\n\t\t<div className={style.gifBlocks}>\r\n\t\t\t{gifElements}\r\n\t\t\t{props.isRequest ? null : <button onClick={props.moreGig}>more</button>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default Gif","import React from 'react';\r\nimport Gif from './Gif.js'\r\nimport * as axios from 'axios'\r\n\r\n\r\nclass GifAPIComponent extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\taxios.get(\"https://api.giphy.com/v1/gifs/trending?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&limit=25&rating=G\").then( response => {\r\n\t\t\tthis.props.getGif(response.data.data)\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tmoreGig = () => {\r\n\t\taxios.get(`https://api.giphy.com/v1/gifs/trending?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&limit=25&rating=G&offset=${this.props.offsetCount}`).then( response => {\r\n\t\t\tthis.props.getGif(response.data.data)\r\n\t\t})\r\n\t\tthis.props.addOffsetCount(25)\r\n\t}\r\n\r\n\tmoreSearchGif = () => {\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Gif gifData={this.props.gifData} moreGig={this.moreGig} isRequest={this.props.isRequest} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default GifAPIComponent","import {connect} from 'react-redux'\r\nimport GifAPIComponent from './GifAPIComponent.js'\r\nimport {getGifActionCreator, toggleIsFetchingAC, addOffsetCountAC} from '../../redux/gif-reducer.js'\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tgifData: state.gif.gifData,\r\n\t\toffsetCount: state.gif.offsetCount,\r\n\t\tisFetching: state.gif.isFetching,\r\n\t\tisRequest: state.gif.isRequest\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetGif: (gifData) => { dispatch( getGifActionCreator(gifData) ) },\r\n\t\ttoggleIsFetchingAC: (isFetching) => {dispatch(toggleIsFetchingAC(isFetching))},\r\n\t\taddOffsetCount: (offsetCount) => { dispatch( addOffsetCountAC(offsetCount) ) },\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GifAPIComponent)","import React, {useState} from 'react';\r\nimport * as axios from 'axios'\r\n\r\n\r\n\r\nfunction Header(props) {\r\n\r\n\tlet [search, setSearch] = useState(\"\")\r\n\r\n\r\n\r\n\tlet onSearchChange = (e) => {\r\n\t\tsetSearch(e.currentTarget.value)\r\n\t\tif(e.currentTarget.value === \"\") {\r\n\t\t\taxios.get(\"https://api.giphy.com/v1/gifs/trending?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&limit=25&rating=G\").then( response => {\r\n\t\t\t\tprops.setGif(response.data.data)\r\n\t\t\t})\t\t\r\n\t\t\tprops.toggleIsRequest(false)\t\r\n\t\t} else {\r\n\t\t\tprops.toggleIsRequest(true)\r\n\t\t\taxios.get(`https://api.giphy.com/v1/gifs/search?api_key=mTweuzAM6GLdLGsSoiIRzJE8IdId1iAI&q=${e.currentTarget.value}&limit=25&offset=0&rating=G&lang=en`).then( response => {\r\n\t\t\t\tprops.setGif(response.data.data)\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n        <header className=\"header\">\r\n          <div className=\"head\">  \r\n            <div className=\"logo\">GIF</div> \r\n            <input \r\n            \tplaceholder=\"поиск\" \r\n            \tonChange={onSearchChange}\r\n            \tvalue={search} />\r\n           </div>\r\n        </header>\r\n\t)\r\n}\r\n\r\n\r\nexport default Header","import {connect} from 'react-redux'\r\nimport Header from './Header.js'\r\nimport {setGifActionCreator, toggleIsRequestAC} from '../../redux/gif-reducer.js'\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetGif: (gifData) => { dispatch( setGifActionCreator(gifData) ) },\r\n\t\ttoggleIsRequest: (isRequest) => { dispatch(toggleIsRequestAC(isRequest)) }\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)","import React from 'react';\nimport './App.css';\nimport store from './redux/redux-store.js'\nimport {Provider} from 'react-redux'\nimport GifContainer from './components/Gif/GifContainer.js'\nimport HeaderContainer from './components/Header/HeaderContainer.js'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <HeaderContainer />\n        <div className=\"container\">          \n          <GifContainer />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}